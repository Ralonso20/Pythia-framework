name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --all-extras
        uv add --dev pytest-cov

    - name: Run linting
      run: |
        uv run ruff check .
        uv run ruff format --check .

    - name: Run tests with coverage
      run: |
        uv run pytest --cov=pythia --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install MkDocs dependencies
      run: |
        uv add mkdocs mkdocs-material mkdocs-awesome-pages-plugin

    - name: Build docs
      run: |
        cd docs
        uv run mkdocs build

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.ACCESS_TOKEN }}
        publish_dir: ./docs/site
        publish_branch: gh-pages

  # Commented out PyPI publishing - not ready for production yet
  publish:
     runs-on: ubuntu-latest
     needs: [test, docs]
     if: github.event_name == 'release'

     steps:
     - uses: actions/checkout@v4

     - name: Set up Python
       uses: actions/setup-python@v4
       with:
         python-version: "3.11"

     - name: Install uv
       uses: astral-sh/setup-uv@v3
       with:
         version: "latest"

     - name: Build package
       run: |
         uv build

     - name: Publish to PyPI
       env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
       run: |
         uv publish
